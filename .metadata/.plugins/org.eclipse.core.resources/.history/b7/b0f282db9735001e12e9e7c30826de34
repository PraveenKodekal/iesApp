package com.majorProject.iesApp.adminModule.service.impl;

import java.util.List;
import java.util.Random;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.majorProject.iesApp.adminModule.binding.UnlockAccountForm;
import com.majorProject.iesApp.adminModule.binding.UserAccountForm;
import com.majorProject.iesApp.adminModule.entity.UserEntity;
import com.majorProject.iesApp.adminModule.repo.UserRepository;
import com.majorProject.iesApp.adminModule.service.AccountService;
import com.majorProject.iesApp.adminModule.utils.emailUtils;

@Service
public class AccountServiceImpl implements AccountService{
	
	@Autowired
	private UserRepository repo;
	
	@Autowired
	private emailUtils mail;

	@Override
	public boolean createUser(UserAccountForm userForm) {

		UserEntity user= new UserEntity();
		BeanUtils.copyProperties(userForm, user);
		
		// set Random Password
		user.setUserPwd(OTP().toString());
		
		//set acc Status
		user.setActiveStatus("LOCKED");
		user.setAccountSwch("Y");
		
		
		// send Email
		String body="";
		String subject="";
		
		mail.sendMail(subject, body, userForm.getEmail());
		
		
		
		
		repo.save(user);
		
		return false;
	}

	@Override
	public List<UserAccountForm> fetchUserAccounts() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public UserAccountForm userAccIdById(Integer userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String changeAccStatus(Integer accId, String status) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String unlockAcc(UnlockAccountForm unlockForm) {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	// To generate Otp
	
	private char[] OTP()
	    {
		
		int len=6;
	        System.out.println("Generating OTP using random() : ");
	        System.out.print("You OTP is : ");
	  
	        // Using numeric values
	        String numbers = "0123456789";
	  
	        // Using random method
	        Random rndm_method = new Random();
	  
	        char[] otp = new char[len];
	  
	        for (int i = 0; i < len; i++)
	        {
	            // Use of charAt() method : to get character value
	            // Use of nextInt() as it is scanning the value as int
	            otp[i] =
	             numbers.charAt(rndm_method.nextInt(numbers.length()));
	        }
	        return otp;
	    }
	   
	

}
